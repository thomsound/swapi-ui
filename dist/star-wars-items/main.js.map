{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_util/util.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.reducer.ts","./src/app/category-list/categories.ts","./src/app/category-list/category-list.component.ts","./src/app/category-list/category-list.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/item/item-list/item-list.component.ts","./src/app/item/item-list/item-list.component.html","./src/app/item/item-list/item-list.resolver.ts","./src/app/item/item.module.ts","./src/app/item/item/item.component.ts","./src/app/item/item/item.component.html","./src/app/store/actions.ts","./src/app/store/store-data.reducer.ts","./src/app/store/store-data.ts","./src/app/store/storeData.dispatcher.ts","./src/app/store/storeData.effects.ts","./src/app/swapi.service.ts","./src/app/ui-components/crawling-content-box/crawling-content-box.component.ts","./src/app/ui-components/crawling-content-box/crawling-content-box.component.html","./src/app/ui-components/expandable-list-item/expandable-list-item.component.ts","./src/app/ui-components/expandable-list-item/expandable-list-item.component.html","./src/app/ui-components/expandable-list/expandable-list.component.ts","./src/app/ui-components/expandable-list/expandable-list.component.html","./src/app/ui-components/icon-menu/icon-menu.component.ts","./src/app/ui-components/icon-menu/icon-menu.component.html","./src/app/ui-components/specs-list/specs-list.component.ts","./src/app/ui-components/specs-list/specs-list.component.html","./src/app/ui-components/ui-components.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { environment } from '../../environments/environment';\nimport { Categories } from '../category-list/categories';\n\nexport default class Util {\n    static getCategoryByUrl(url: string): Categories {\n        const { apiProtocol, apiServer, apiPrefix } = environment;\n        const path = apiServer + apiPrefix;;\n        const regex = new RegExp('(?<=https?:/' + path + '/).[^/]*');\n        const category = url.match(regex);\n        return Categories[category[0]] || null;\n    }\n\n    static isValidCategoryString(category: string) {\n        return Object.values(Categories).includes(category);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { ItemListComponent } from './item/item-list/item-list.component';\nimport { ItemListResolver } from './item/item-list/item-list.resolver';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: HomeComponent,\n    },\n    {\n        path: ':category',\n        component: ItemListComponent,\n        resolve: { ItemListResolver }\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    title = 'starwars';\n\n    constructor(private router: Router) {\n        this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    }\n}\n","<div class=\"menu\">\n    <span [routerLink]=\"['/']\">HOME</span>\n    <app-category-list></app-category-list>\n</div>\n<router-outlet></router-outlet>\n\n<div class=\"error-msg-modal\"></div>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { FontAwesomeModule } from 'ngx-icons';\nimport { environment } from 'src/environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { reducers } from './app.reducer';\nimport { CategoryListComponent } from './category-list/category-list.component';\nimport { HomeComponent } from './home/home.component';\nimport { ItemModule } from './item/item.module';\nimport { UiComponentsModule } from './ui-components/ui-components.module';\n\n@NgModule({\n    declarations: [ AppComponent, CategoryListComponent, HomeComponent ],\n    imports:\n        [\n            AppRoutingModule,\n            BrowserModule,\n            FontAwesomeModule,\n            HttpClientModule,\n            StoreModule.forRoot(reducers),\n            StoreDevtoolsModule.instrument({\n                maxAge: 25,\n                logOnly: environment.production,\n            }),\n            ItemModule,\n            UiComponentsModule,\n        ],\n    providers: [ ],\n    bootstrap: [ AppComponent ],\n})\nexport class AppModule {}\n","import {\n    routerReducer,\n    RouterReducerState\n} from '@ngrx/router-store';\nimport { ActionReducerMap } from '@ngrx/store';\n\n\nexport interface State {\n    router: RouterReducerState;\n}\n\nexport const reducers: ActionReducerMap<State> = {\n    router: routerReducer,\n};\n","export enum Categories {\n    FILMS = <any>'films',\n    PEOPLE = <any>'people',\n    PLANETS = <any>'planets',\n    SPECIES = <any>'species',\n    STARSHIPS = <any>'starships',\n    VEHICLES = <any>'vehicles',\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.scss']\n})\nexport class CategoryListComponent {\n\n    constructor(\n        private router: Router\n    ) {}\n\n    navigate(category: string) {\n        this.router.navigate([ category ]);\n    }\n}\n","<ul>\n    <li (click)=\"navigate('people')\">PEOPLE</li>\n    <li (click)=\"navigate('films')\">FILMS</li>\n    <li (click)=\"navigate('starships')\">STARSHIPS</li>\n    <li (click)=\"navigate('vehicles')\">VEHICLES</li>\n    <li (click)=\"navigate('species')\">SPECIES</li>\n    <li (click)=\"navigate('planets')\">PLANETS</li>\n</ul>\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: [ './home.component.scss' ]\n})\nexport class HomeComponent { }\n","<div class=\"logo-container\"></div>\n<div class=\"menu-container\">\n    <app-category-list class=\"menu\"></app-category-list>\n</div>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport Util from 'src/app/_util/util';\nimport { StarWarsItem } from '../../store/star-wars-item';\nimport { selectItemEntriesByCategory, selectPeopleEntries } from '../../store/store-data.reducer';\n\n@Component({\n    selector: 'app-item-list',\n    templateUrl: './item-list.component.html',\n    styleUrls: [ './item-list.component.scss' ],\n})\nexport class ItemListComponent {\n\n    items$: Observable<{ [ key: string ]: StarWarsItem }>;\n    category: string\n\n    constructor(private store: Store, private route: ActivatedRoute, private router: Router) {\n        const category = route.snapshot.params.category;\n\n        if (category && Util.isValidCategoryString(category)) {\n            this.category = category.toUpperCase();\n            this.items$ = this.store.select(selectItemEntriesByCategory(category));\n        } else {\n            this.category = 'PEOPLE';\n            this.items$ = this.store.select(selectPeopleEntries);\n        }\n    }\n}\n","<h2>{{category}}</h2>\n<div class=\"list\">\n    <ng-container *ngFor=\"let item of (items$ | async) | keyvalue\">\n        <app-item [item]=\"item.value\"></app-item>\n    </ng-container>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router';\nimport Util from 'src/app/_util/util';\nimport { StoreDataDispatcher } from '../../store/storeData.dispatcher';\n\n@Injectable()\nexport class ItemListResolver implements Resolve<void> {\n\n    constructor(\n        private dispatcher: StoreDataDispatcher,\n        private router: Router\n    ) { }\n\n    resolve( route: ActivatedRouteSnapshot ): void {\n        const category = route.params.category;\n\n        if (category && Util.isValidCategoryString(category)) {\n            this.dispatcher.loadItems( category );\n        } else {\n            this.router.navigate([ '/' ]);\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromStoreData from '../store/store-data.reducer';\nimport { StoreDataDispatcher } from '../store/storeData.dispatcher';\nimport { StoreDataEffects } from '../store/storeData.effects';\nimport { UiComponentsModule } from '../ui-components/ui-components.module';\nimport { ItemListComponent } from './item-list/item-list.component';\nimport { ItemListResolver } from './item-list/item-list.resolver';\nimport { ItemComponent } from './item/item.component';\n\n@NgModule({\n    declarations: [\n        ItemComponent,\n        ItemListComponent\n    ],\n    imports:\n        [\n            CommonModule,\n            EffectsModule.forRoot([ StoreDataEffects ]),\n            StoreModule.forFeature(fromStoreData.storeSliceKey, fromStoreData.reducer),\n            UiComponentsModule\n        ],\n    exports: [\n        ItemComponent,\n        ItemListComponent\n    ],\n    providers: [ ItemListResolver, StoreDataDispatcher ],\n})\nexport class ItemModule {}\n","import { Component, Input } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Character, Film, Planet, Species, Starship, Vehicle } from 'src/app/store/star-wars-item';\nimport { selectItemByUrl } from 'src/app/store/store-data.reducer';\nimport { IconMenuConfig, IconMenuItem } from 'src/app/ui-components/icon-menu/icon-menu-config';\nimport { Categories } from '../../category-list/categories';\nimport { StoreDataDispatcher } from '../../store/storeData.dispatcher';\n\n@Component({\n    selector: 'app-item',\n    templateUrl: './item.component.html',\n    styleUrls: [ './item.component.scss' ],\n})\nexport class ItemComponent {\n    @Input('item') set setItem(item: any) { this.init(item) };\n\n    iconMenuConfig: IconMenuConfig;\n    item: any;\n    selected = -1;\n\n    people$: Observable<Character[]>;\n    species$: Observable<Species[]>;\n    planets$: Observable<Planet[]>;\n    films$: Observable<Film[]>\n    vehicles$: Observable<Vehicle[]>\n    starships$: Observable<Starship[]>\n\n    constructor(\n        private store: Store,\n        private dispatcher: StoreDataDispatcher,\n    ) { }\n\n    iconMenuClick(idx: number) {\n        this.setSelected(idx);\n        const category = this.iconMenuConfig.entries[ idx ].label;\n        this.dispatcher.loadItemBatchByUrl(this.item[category]);\n    }\n\n    setSelected(idx: number) {\n        this.selected = idx;\n    }\n\n    private init(item: any) {\n        this.item = item;\n        let entries: IconMenuItem[] = [];\n\n        if (item.people) {\n            entries.push({\n                label: Categories.PEOPLE.toString(),\n                iconId: 'group',\n                disabled: item.people.length <= 0,\n            });\n            this.people$ = combineLatest(\n                <Observable<Character>>this.item.people.map(characterUrl => this.store.pipe(select(selectItemByUrl(characterUrl))))\n            ).pipe(\n                filter((people: Character[]) => people && people.length > 0 && !people.some(character => !character)),\n            );\n        }\n        if (item.species) {\n            entries.push({\n                label: Categories.SPECIES.toString(),\n                iconId: 'male',\n                disabled: item.species.length <= 0,\n            });\n            this.species$ = combineLatest(\n                <Observable<Species>>this.item.species.map(speciesUrl => this.store.pipe(select(selectItemByUrl(speciesUrl))))\n            ).pipe(\n                filter((species: Species[]) => species && species.length > 0 && !species.some(species => !species)),\n            );\n        }\n        if (item.planets) {\n            entries.push({\n                label: Categories.PLANETS.toString(),\n                iconId: 'star',\n                disabled: item.planets.length <= 0,\n            });\n            this.planets$ = combineLatest(\n                <Observable<Planet>>this.item.planets.map(planetUrl => this.store.pipe(select(selectItemByUrl(planetUrl))))\n            ).pipe(\n                filter((planets: Planet[]) => planets && planets.length > 0 && !planets.some(planet => !planet)),\n            );\n        }\n        if (item.films) {\n            entries.push({\n                label: Categories.FILMS.toString(),\n                iconId: 'film',\n                disabled: item.films.length <= 0,\n            });\n            this.films$ = combineLatest(\n                <Observable<Film>>this.item.films.map(filmUrl => this.store.pipe(select(selectItemByUrl(filmUrl))))\n            ).pipe(\n                filter((films: Film[]) => films && films.length > 0 && !films.some(film => !film)),\n            );\n        }\n        if (item.vehicles) {\n            entries.push({\n                label: Categories.VEHICLES.toString(),\n                iconId: 'truck',\n                disabled: item.vehicles.length <= 0,\n            });\n            this.vehicles$ = combineLatest(\n                <Observable<Vehicle>>this.item.vehicles.map(vehicleUrl => this.store.pipe(select(selectItemByUrl(vehicleUrl))))\n            ).pipe(\n                filter((vehicles: Vehicle[]) => vehicles && vehicles.length > 0 && !vehicles.some(vehicle => !vehicle)),\n            );\n        }\n        if (item.starships) {\n            entries.push({\n                label: Categories.STARSHIPS.toString(),\n                iconId: 'space-shuttle',\n                disabled: item.starships.length <= 0,\n            });\n            this.starships$ = combineLatest(\n                <Observable<Starship>>this.item.starships.map(starshipUrl => this.store.pipe(select(selectItemByUrl(starshipUrl))))\n            ).pipe(\n                filter((starships: Starship[]) => starships && starships.length > 0 && !starships.some(starship => !starship)),\n            );\n        }\n\n        this.iconMenuConfig = { defaultLabel: 'characteristics', entries };\n    }\n}\n","<div class=\"item\">\n    <h3 (click)=\"setSelected(-1)\">{{item.name}}</h3>\n    <app-icon-menu\n        class=\"item__icon-menu\"\n        [config]=\"iconMenuConfig\"\n        [active]=\"selected\"\n        (itemClicked)=\"iconMenuClick($event)\"\n    ></app-icon-menu>\n\n    <app-specs-list *ngIf=\"selected < 0\" [item]=\"item\"></app-specs-list>\n\n    <ng-container *ngIf=\"selected >= 0 && iconMenuConfig.entries[selected].label as label\">\n        <div class=\"item__dropdown-container dropdown-container\">\n            <ng-container *ngIf=\"label === 'people' && (people$ | async) as people\">\n                <app-expandable-list [items]=\"people\"></app-expandable-list>\n            </ng-container>\n            <ng-container *ngIf=\"label === 'species' && (species$ | async) as species\">\n                <app-expandable-list [items]=\"species\"></app-expandable-list>\n            </ng-container>\n            <ng-container *ngIf=\"label === 'planets' && (planets$ | async) as planets\">\n                <app-expandable-list [items]=\"planets\"></app-expandable-list>\n            </ng-container>\n            <ng-container *ngIf=\"label === 'films' && (films$ | async) as films\">\n                <app-expandable-list [items]=\"films\"></app-expandable-list>\n            </ng-container>\n            <ng-container *ngIf=\"label === 'vehicles' && (vehicles$ | async) as vehicles\">\n                <app-expandable-list [items]=\"vehicles\"></app-expandable-list>\n            </ng-container>\n            <ng-container *ngIf=\"label === 'starships' && (starships$ | async) as starships\">\n                <app-expandable-list [items]=\"starships\"></app-expandable-list>\n            </ng-container>\n        </div>\n    </ng-container>\n</div>\n","import { createAction, props } from '@ngrx/store';\nimport { StarWarsItem } from '../store/star-wars-item';\nimport { itemListContainer } from './store-data';\n\n\nexport const loadItemsStartedAction = createAction('[Global] Load Items Started', props<{ category: string, page?: string }>());\nexport const loadItemsSucceededAction = createAction(\n    '[Global] Load Items Success',\n    props<{ category: string, items: itemListContainer<StarWarsItem> }>(),\n);\nexport const loadItemsFailedAction = createAction('[Global] Load Items Error');\n\nexport const loadSingleItemByUrlFailedAction = createAction('[Global] Load Single Item Error');\nexport const loadSingleItemByUrlStartedAction = createAction(\n    '[Global] Load Single Item Started',\n    props<{ url: string }>(),\n);\nexport const loadSingleItemByUrlSucceededAction = createAction(\n    '[Global] Load Single Item Success',\n    props<{ item: StarWarsItem }>(),\n);\n\nexport const loadSingleItemBatchByUrlsFailedAction = createAction('[Global] Load Single Item Batch Error');\nexport const loadSingleItemBatchByUrlsStartedAction = createAction(\n    '[Global] Load Single Item Batch Started',\n    props<{ urls: string[] }>(),\n);\nexport const loadSingleItemBatchByUrlsSucceededAction = createAction(\n    '[Global] Load Single Item Batch Success',\n    props<{ items: StarWarsItem[] }>(),\n);\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { Categories } from '../category-list/categories';\nimport Util from '../_util/util';\nimport { loadItemsSucceededAction, loadSingleItemBatchByUrlsSucceededAction, loadSingleItemByUrlSucceededAction } from './actions';\nimport { ApplicationState } from './application-state';\nimport { StarWarsItem } from './star-wars-item';\nimport { INITIAL_STORE_DATA_STATE, StoreData } from './store-data';\n\nexport const storeSliceKey = 'storeData';\n\nconst storeDataReducer = createReducer(\n    INITIAL_STORE_DATA_STATE,\n    on(loadItemsSucceededAction, (state, { category, items }) => {\n        return {\n            ...state,\n            [category]: {\n                count: items.count,\n                previous: items.previous,\n                next: items.next,\n                entries: {\n                    ...state[category].entries,\n                    ...items.entries,\n                }\n            }\n        }\n    }),\n    on(loadSingleItemByUrlSucceededAction, (state, { item }) => addSingleItemToState(state, item)),\n    on(loadSingleItemBatchByUrlsSucceededAction, (state, { items }) => {\n        let tmpState = { ...state };\n        for (let i = 0; i < items.length; i++) {\n            tmpState = addSingleItemToState(tmpState, items[i])\n        }\n        return tmpState;\n    }),\n);\n\nfunction addSingleItemToState(state: StoreData, item: StarWarsItem) {\n    const category = Categories[Util.getCategoryByUrl(item.url)];\n    return category === null ? state : {\n        ...state,\n        [category]: {\n            ...state[category],\n            entries: {\n                ...state[category]?.entries,\n                [item.url]: item\n            }\n        }\n    }\n}\n\nexport function reducer(state: StoreData | undefined, action: Action) {\n    return storeDataReducer(state, action);\n}\n\nexport const selectStoreData = createFeatureSelector<ApplicationState, StoreData>('storeData');\n\nexport const selectItemListContainerByCategory = (category: string) => createSelector(selectStoreData, state => state && state[ category ] );\nexport const selectItemEntriesByCategory = (category: string) => createSelector(selectItemListContainerByCategory(category), state => state?.entries);\nexport const selectItemByCategory = (category: string) => createSelector(selectItemEntriesByCategory(category), state => state && state[ category ]);\n\nexport const selectItemListContainerByUrl = (url: string) => createSelector(selectStoreData, state => {\n    if (!url) return;\n    const category = Categories[Util.getCategoryByUrl(url)];\n    return state && state[ category ];\n})\nexport const selectCategoryEntriesByUrl = (url: string) => createSelector(selectItemListContainerByUrl(url), state => state?.entries);\nexport const selectItemByUrl = (url: string) => createSelector(selectCategoryEntriesByUrl(url), state => state && state[ url ]);\n\nexport const selectPeopleListContainer = createSelector(selectStoreData, state => state.people);\nexport const selectPeopleEntries = createSelector(selectPeopleListContainer, state => state.entries);\nexport const selectCharacterById = (id: string) => createSelector(selectPeopleEntries, peopleEntries => peopleEntries && peopleEntries[ id ]);\n","import { Character, Film, Planet, Species, Starship, Vehicle } from './star-wars-item';\n\nexport interface StoreData {\n    people: itemListContainer<Character>;\n    films: itemListContainer<Film>;\n    starships: itemListContainer<Starship>;\n    vehicles: itemListContainer<Vehicle>;\n    species: itemListContainer<Species>;\n    planets: itemListContainer<Planet>;\n}\n\nexport interface itemListContainer<T> {\n    count: number,\n    previous: string,\n    next: string,\n    entries: { [ key: string ]: T }\n}\n\nexport const INITIAL_STORE_DATA_STATE: StoreData = {\n    people: { count: 0, previous: null, next: null, entries: {}},\n    films: { count: 0, previous: null, next: null, entries: {}},\n    starships: { count: 0, previous: null, next: null, entries: {}},\n    vehicles: { count: 0, previous: null, next: null, entries: {}},\n    species: { count: 0, previous: null, next: null, entries: {}},\n    planets: { count: 0, previous: null, next: null, entries: {}},\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n    loadItemsStartedAction, loadSingleItemBatchByUrlsStartedAction,\n    loadSingleItemByUrlStartedAction\n} from './actions';\n\n@Injectable()\nexport class StoreDataDispatcher {\n    constructor(private store: Store) {}\n\n    // loadCharacters(page?: string): void {\n    //     this.store.dispatch(loadCharactersStartedAction(page ? { page } : {}));\n    // }\n\n    loadItems(category: string, page?: string): void {\n        this.store.dispatch(loadItemsStartedAction({ category, page }));\n    }\n\n    loadItemByUrl(url: string): void {\n        this.store.dispatch(loadSingleItemByUrlStartedAction({ url }));\n    }\n\n    loadItemBatchByUrl(urls: string[]): void {\n        this.store.dispatch(loadSingleItemBatchByUrlsStartedAction({ urls }));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { catchError, filter, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { SwapiService } from '../swapi.service';\nimport {\n    loadItemsFailedAction,\n    loadItemsStartedAction,\n    loadItemsSucceededAction, loadSingleItemBatchByUrlsFailedAction,\n    loadSingleItemBatchByUrlsStartedAction,\n    loadSingleItemBatchByUrlsSucceededAction,\n    loadSingleItemByUrlFailedAction,\n    loadSingleItemByUrlStartedAction,\n    loadSingleItemByUrlSucceededAction\n} from './actions';\nimport { StarWarsItem } from './star-wars-item';\n\n@Injectable()\nexport class StoreDataEffects {\n    loadItems$: Observable<Action> = createEffect(() =>\n        this.actions$.pipe(\n            ofType(loadItemsStartedAction),\n            mergeMap((action) =>\n                this.service\n                    .getItems(action.category, action.page)\n                    .pipe(\n                        map((items) => loadItemsSucceededAction({ category: action.category, items })),\n                        catchError(() => of(loadItemsFailedAction())),\n                    ),\n            ),\n        ),\n    );\n\n    loadSingleItem$: Observable<Action> = createEffect(() =>\n        this.actions$.pipe(\n            ofType(loadSingleItemByUrlStartedAction),\n            mergeMap((action) =>\n                this.service\n                    .getItemByUrl(action.url)\n                    .pipe(\n                        map((item) => loadSingleItemByUrlSucceededAction({ item })),\n                        catchError(() => of(loadSingleItemByUrlFailedAction())),\n                    ),\n            ),\n        ),\n    );\n\n    loadSingelItemBatch$: Observable<Action> = createEffect(() =>\n        this.actions$.pipe(\n            ofType(loadSingleItemBatchByUrlsStartedAction),\n            switchMap((action) =>\n                this.service\n                    .getItemBatchByUrls(action.urls)\n                    .pipe(\n                        filter(value => !!value),\n                        map((items: StarWarsItem[]) => loadSingleItemBatchByUrlsSucceededAction({ items })),\n                        catchError(() => of(loadSingleItemBatchByUrlsFailedAction())),\n                    ),\n            ),\n        ),\n    );\n\n    constructor(private actions$: Actions, private service: SwapiService) {}\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\nimport { environment } from '../environments/environment';\nimport { Categories } from './category-list/categories';\nimport { Character, Film, Planet, Species, Starship, StarWarsItem, Vehicle } from \"./store/star-wars-item\";\nimport { itemListContainer } from \"./store/store-data\";\nimport { selectItemByUrl } from './store/store-data.reducer';\nimport Util from './_util/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SwapiService {\n\n\n    baseUrl: string;\n\n    constructor(\n        private httpClient: HttpClient,\n        private store: Store\n    ) {\n        const { apiProtocol, apiServer, apiPrefix } = environment;\n        this.baseUrl = apiProtocol + apiServer + apiPrefix;\n    }\n\n    getItems(category: string, page?: string): Observable<itemListContainer<StarWarsItem>> {\n        return this.httpClient.get(this.baseUrl + '/' + category, page ? { params: { page } } : {}).pipe(\n            filter(res => res.hasOwnProperty('results')),\n            map(res => this.parseItems(res))\n        );\n    }\n\n    getItemByUrl(url: string): Observable<StarWarsItem> {\n        return this.store.pipe(select(selectItemByUrl(url))).pipe(\n            switchMap(item =>\n                !item\n                    ? this.httpClient.get(url).pipe(\n                        map(item => this.parseItem(item))\n                    )\n                    : of(item)\n            )\n        );\n    }\n\n    getItemBatchByUrls(urls: string[]): Observable<StarWarsItem[]> {\n        const batch: Observable<StarWarsItem>[] = [];\n        urls.map(url => batch.push(\n            this.getItemByUrl(url)\n        ));\n        return combineLatest(batch).pipe(first());\n    }\n\n    private parseItems(response: any): itemListContainer<StarWarsItem> {\n        const { count, next, previous, results } = response;\n        let itemMap: { [ key: string ]: StarWarsItem } = {};\n        results.forEach(element => {\n            itemMap[ element?.url ] = this.parseItem(element);\n        });\n        return {\n            count,\n            next,\n            previous,\n            entries: itemMap\n        }\n    }\n\n    private parseItem(response: any) {\n        const category = Categories[Util.getCategoryByUrl(response.url)];\n        switch (category) {\n            case Categories.FILMS.toString():\n                return this.parseFilm(response);\n            case Categories.PEOPLE.toString():\n                return this.parseCharacter(response);\n            case Categories.PLANETS.toString():\n                return this.parsePlanet(response);\n            case Categories.SPECIES.toString():\n                return this.parseSpecies(response);\n            case Categories.STARSHIPS.toString():\n                return this.parseStarship(response);\n            case Categories.VEHICLES.toString():\n                return this.parseVehicle(response);\n            default:\n                break;\n        }\n    }\n\n    private parseCharacter(response: any): Character {\n        response.planets = response.homeworld ? [ response.homeworld ] : [];\n        delete response.homeworld;\n        return response;\n    }\n\n    private parseFilm(response: any): Film {\n        response.people = response.characters;\n        delete response.characters;\n        response.name = response.title;\n        delete response.title;\n        return response;\n    }\n\n    private parseStarship(response: any): Starship {\n        response.people = response.pilots;\n        delete response.pilots;\n        return response;\n    }\n\n    private parseVehicle(response: any): Vehicle {\n        response.people = response.pilots;\n        delete response.pilots;\n        return response;\n    }\n\n    private parseSpecies(response: any): Species {\n        response.planets = response.homeworld ? [ response.homeworld ] : [];\n        delete response.homeworld;\n        return response;\n    }\n\n    private parsePlanet(response: any): Planet {\n        response.people = response.residents;\n        delete response.residents;\n        return response;\n    }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-crawling-content-box',\n  templateUrl: './crawling-content-box.component.html',\n  styleUrls: ['./crawling-content-box.component.scss']\n})\nexport class CrawlingContentBoxComponent {}\n","<div class=\"container\">\n    <div class=\"content\">\n        <ng-content></ng-content>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-expandable-list-item',\n  templateUrl: './expandable-list-item.component.html',\n  styleUrls: ['./expandable-list-item.component.scss']\n})\nexport class ExpandableListItemComponent {\n    @Input() label: string;\n    @Input() expand: boolean;\n\n    @Output() labelClicked = new EventEmitter<void>();\n\n    emitLabelClicked() {\n        this.labelClicked.emit()\n    }\n}\n","<div class=\"item\">\n    <div class=\"item__label label\" (click)=\"emitLabelClicked()\">{{label}}</div>\n    <div class=\"content\" *ngIf=\"expand\">\n        <ng-content></ng-content>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { StarWarsItem } from 'src/app/store/star-wars-item';\n\n@Component({\n  selector: 'app-expandable-list',\n  templateUrl: './expandable-list.component.html',\n  styleUrls: ['./expandable-list.component.scss']\n})\nexport class ExpandableListComponent {\n    @Input() items: StarWarsItem[];\n\n    idxExpanded = -1;\n\n    expand(idx: number) {\n        this.idxExpanded = idx === this.idxExpanded ? -1 : idx;\n    }\n}\n","<div class=\"list\">\n    <ng-container *ngFor=\"let item of items; let i = index\">\n        <app-expandable-list-item class=\"list__item\" [label]=\"item.name\" [expand]=\"idxExpanded === i\" (labelClicked)=\"expand(i)\">\n            <app-specs-list [item]=\"item\"></app-specs-list>\n        </app-expandable-list-item>\n    </ng-container>\n</div>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IconMenuConfig } from './icon-menu-config';\n\n@Component({\n    selector: 'app-icon-menu',\n    templateUrl: './icon-menu.component.html',\n    styleUrls: [ './icon-menu.component.scss' ],\n})\nexport class IconMenuComponent {\n    @Input() config: IconMenuConfig;\n    @Input() active: number;\n    @Output() itemClicked = new EventEmitter<number>();\n    @Output() itemHovered = new EventEmitter<number>();\n\n    hover: number;\n\n    menuItemHovered(idx: number) {\n        this.hover = idx;\n        if (idx < 0) return;\n        this.itemHovered.emit(idx);\n    }\n\n    menuItemClicked(idx: number) {\n        if (this.config.entries[ idx ].disabled) return;\n        this.active = idx;\n        if (idx < 0) return;\n        this.itemClicked.emit(idx);\n    }\n}\n","<div class=\"info-menu\">\n    <div class=\"icon-bar\">\n        <ng-container *ngIf=\"config && config.entries\"></ng-container>\n        <ng-container *ngFor=\"let item of config.entries; let i = index\">\n            <div\n                class=\"icon-bar__item icon-bar-item\"\n                [class.active]=\"hover >= 0 && !item.disabled ? i == hover : i == active\"\n                [class.icon-bar__item--disabled]=\"item.disabled\"\n                (click)=\"menuItemClicked(i)\"\n                (mouseover)=\"menuItemHovered(i)\"\n                (mouseout)=\"menuItemHovered(-1)\"\n            >\n                <fa name=\"{{item.iconId}}\"></fa>\n            </div>\n        </ng-container>\n        <div class=\"label-bar\">\n            <label\n                [class.label-bar--disabled]=\"hover >= 0 && config.entries[hover].disabled\"\n            >\n                {{hover >= 0\n                    ? config.entries[hover].label\n                    : (active >= 0\n                        ? config.entries[active].label\n                        : config.defaultLabel\n                    )\n                }}\n            </label>\n        </div>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { Categories } from 'src/app/category-list/categories';\nimport { StarWarsItem } from 'src/app/store/star-wars-item';\nimport Util from '../../_util/util';\n\n@Component({\n    selector: 'app-specs-list',\n    templateUrl: './specs-list.component.html',\n    styleUrls: [ './specs-list.component.scss' ],\n})\nexport class SpecsListComponent {\n    @Input('item') set setItem(item: StarWarsItem) {\n        this.item = item;\n        this.category = Util.getCategoryByUrl(item.url);\n    };\n\n    item: StarWarsItem;\n    category: Categories;\n    Categories = Categories;\n}\n","<ng-container [ngSwitch]=\"Categories[category]\">\n    <ng-container *ngSwitchCase=\"Categories.FILMS\" [ngTemplateOutlet]=\"films\"></ng-container>\n    <ng-container *ngSwitchCase=\"Categories.PEOPLE\" [ngTemplateOutlet]=\"people\"></ng-container>\n    <ng-container *ngSwitchCase=\"Categories.PLANETS\" [ngTemplateOutlet]=\"planets\"></ng-container>\n    <ng-container *ngSwitchCase=\"Categories.SPECIES\" [ngTemplateOutlet]=\"species\"></ng-container>\n    <ng-container *ngSwitchCase=\"Categories.STARSHIPS\" [ngTemplateOutlet]=\"starships\"></ng-container>\n    <ng-container *ngSwitchCase=\"Categories.VEHICLES\" [ngTemplateOutlet]=\"vehicles\"></ng-container>\n</ng-container>\n\n<ng-template #people>\n    <ul>\n        <li>height: {{ item.height || 'n/a'}}</li>\n        <li>mass: {{ item.mass || 'n/a'}}</li>\n        <li>hair color: {{ item.hair_color || 'n/a'}}</li>\n        <li>skin color: {{ item.skin_color || 'n/a'}}</li>\n        <li>eye color: {{ item.eye_color || 'n/a'}}</li>\n        <li>birth year: {{ item.birth_year || 'n/a'}}</li>\n        <li>gender: {{ item.gender || 'n/a'}}</li>\n    </ul>\n</ng-template>\n\n<ng-template #species>\n    <ul>\n        <li>name: {{ item.name || 'n/a' }}</li>\n        <li>classification: {{ item.classification || 'n/a' }}</li>\n        <li>designation: {{ item.designation || 'n/a' }}</li>\n        <li>language: {{ item.language || 'n/a' }}</li>\n        <li>ø lifespang: {{ item.average_lifespan || 'n/a' }}</li>\n        <li>ø height: {{ item.average_height || 'n/a' }}</li>\n        <li>eye colors: {{ item.eye_colors || 'n/a' }}</li>\n        <li>hair colors: {{ item.hair_colors || 'n/a' }}</li>\n        <li>skin colors: {{ item.skin_colors || 'n/a' }}</li>\n    </ul>\n</ng-template>\n\n<ng-template #planets>\n    <ul>\n        <li>name: {{ item.name || 'n/a' }}</li>\n        <li>rotation period: {{ item.rotation_period || 'n/a' }}</li>\n        <li>orbital period: {{ item.orbital_period || 'n/a' }}</li>\n        <li>diameter: {{ item.diameter || 'n/a' }}</li>\n        <li>climate: {{ item.climate || 'n/a' }}</li>\n        <li>gravity: {{ item.gravity || 'n/a' }}</li>\n        <li>terrain: {{ item.terrain || 'n/a' }}</li>\n        <li>surface water: {{ item.surface_water || 'n/a' }}</li>\n        <li>population: {{ item.population || 'n/a' }}</li>\n    </ul>\n</ng-template>\n\n<ng-template #films>\n    <ul>\n        <li>title: {{ item.name || 'n/a' }}</li>\n        <li>episode: {{ item.episode_id || 'n/a' }}</li>\n        <li>director: {{ item.director || 'n/a' }}</li>\n        <li>producer: {{ item.producer || 'n/a' }}</li>\n        <li>release date: {{ item.release_date || 'n/a' }}</li>\n    </ul>\n    <ng-container *ngIf=\"item.opening_crawl && item.opening_crawl.trim()\">\n        <h4>opening crawl</h4>\n        <app-crawling-content-box class=\"crawl\">\n            {{ item.opening_crawl }}\n        </app-crawling-content-box>\n    </ng-container>\n</ng-template>\n\n<ng-template #vehicles>\n    <ul>\n        <li>name: {{ item.name || 'n/a' }}</li>\n        <li>model: {{ item.model || 'n/a' }}</li>\n        <li>manufacturer: {{ item.manufacturer || 'n/a' }}</li>\n        <li>cost in credits: {{ item.cost_in_credits || 'n/a' }}</li>\n        <li>length: {{ item.length || 'n/a' }}</li>\n        <li>max atmosphering speed: {{ item.max_atmosphering_speed || 'n/a' }}</li>\n        <li>crew: {{ item.crew || 'n/a' }}</li>\n        <li>passengers: {{ item.passengers || 'n/a' }}</li>\n        <li>cargo capacity: {{ item.cargo_capacity || 'n/a' }}</li>\n        <li>consumables: {{ item.consumables || 'n/a' }}</li>\n        <li>vehicle class: {{ item.vehicle_class || 'n/a' }}</li>\n    </ul>\n</ng-template>\n\n<ng-template #starships>\n    <ul>\n        <li>name: {{ item.name || 'n/a' }}</li>\n        <li>model: {{ item.model || 'n/a' }}</li>\n        <li>manufacturer: {{ item.manufacturer || 'n/a' }}</li>\n        <li>cost in credits: {{ item.cost_in_credits || 'n/a' }}</li>\n        <li>length: {{ item.length || 'n/a' }}</li>\n        <li>max atmosphering speed: {{ item.max_atmosphering_speed || 'n/a' }}</li>\n        <li>crew: {{ item.crew || 'n/a' }}</li>\n        <li>passengers: {{ item.passengers || 'n/a' }}</li>\n        <li>cargo capacity: {{ item.cargo_capacity || 'n/a' }}</li>\n        <li>consumables: {{ item.consumables || 'n/a' }}</li>\n        <li>hyperdrive rating: {{ item.hyperdrive_rating || 'n/a' }}</li>\n        <li>MGLT: {{ item.MGLT || 'n/a' }}</li>\n        <li>starship class: {{ item.starship_class || 'n/a' }}</li>\n    </ul>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FontAwesomeModule } from 'ngx-icons';\nimport { CrawlingContentBoxComponent } from './crawling-content-box/crawling-content-box.component';\nimport { ExpandableListItemComponent } from './expandable-list-item/expandable-list-item.component';\nimport { ExpandableListComponent } from './expandable-list/expandable-list.component';\nimport { IconMenuComponent } from './icon-menu/icon-menu.component';\nimport { SpecsListComponent } from './specs-list/specs-list.component';\n\n@NgModule({\n    declarations:\n        [\n            IconMenuComponent,\n            SpecsListComponent,\n            ExpandableListItemComponent,\n            ExpandableListComponent,\n            CrawlingContentBoxComponent,\n        ],\n    exports:\n        [\n            IconMenuComponent,\n            SpecsListComponent,\n            ExpandableListItemComponent,\n            ExpandableListComponent,\n            CrawlingContentBoxComponent,\n        ],\n    imports: [ CommonModule, FontAwesomeModule ],\n})\nexport class UiComponentsModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiProtocol: 'https:/',\n    apiServer: '/swapi.dev',\n    apiPrefix: '/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}